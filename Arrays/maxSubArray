//Code if asked to print the maximum subarray sum only
class Solution {
    public int maxSubArray(int[] nums) {
        int maxi = Integer.MIN_VALUE; // maximum sum
        int sum=0;
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
            if(sum>maxi){
                maxi=sum;
            }
            if(sum<0){
                sum=0;
            }
        }
    // To consider the sum of the empty subarray
    // uncomment the following check:
    //if (maxi < 0) maxi = 0;


        return maxi;
    }
}


//Code if asked to print the maximum subarray
class Solution {
    
    public int maxSubArray(int[] nums) {
        int maxi = Integer.MIN_VALUE; // maximum sum
        int sum=0;
        int ansStart=-1,ansEnd=-1,start=-1;
        for(int i=0;i<nums.length;i++){
            if(sum==0)start=i;
            sum+=nums[i];
            if(sum>maxi){
                maxi=sum;
                ansStart=start;
                ansEnd=i;
            }
            if(sum<0){
                sum=0;
            }
        }
        // To consider the sum of the empty subarray
        // uncomment the following check:
        //if (maxi < 0) maxi = 0;

        return maxi;
        // to return the maximumm subarray
        //return Arrays.copyOfRange(nums, ansStart, ansEnd + 1);
    }
}
